<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.miniapp.mapper.WrittentrainMapper">
  <resultMap id="BaseResultMap" type="com.mini.miniapp.pojo.Writtentrain">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title_id" jdbcType="VARCHAR" property="titleId" />
    <result column="title_type" jdbcType="VARCHAR" property="titleType" />
    <result column="title_desc" jdbcType="VARCHAR" property="titleDesc" />
    <result column="title_url" jdbcType="VARCHAR" property="titleUrl" />
    <result column="title_name" jdbcType="VARCHAR" property="titleName" />
    <result column="title_time" jdbcType="INTEGER" property="titleTime" />
    <result column="title_img" jdbcType="VARCHAR" property="titleImg" />
    <result column="title_exp" jdbcType="LONGVARCHAR" property="titleExp" />
    <result column="title_remark" jdbcType="LONGVARCHAR" property="titleRemark" />
  </resultMap>
  <select id="queryAll" resultMap="BaseResultMap">
    select * from writtentrain
  </select>
  <select id="queryTrainById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from writtentrain where id=#{id}
  </select>
    <select id="countTrainNum" resultType="java.lang.Integer">
    select count(*) from writtentrain
    </select>
    <insert id="saveTrain" parameterType="com.mini.miniapp.pojo.Writtentrain">
        insert into `writtentrain` (`title_id`, `title_type`, `title_desc`, `title_url`,
         `title_name`, `title_time`, `title_exp`, `title_remark`, `title_img`) values (
            #{titleId},#{titleType},#{titleDesc},#{titleUrl},#{titleName},#{titleTime},
            #{titleExp},#{titleRemark},#{titleImg}
        )
    </insert>
  <update id="modifyTrainById" parameterType="com.mini.miniapp.pojo.Writtentrain">
    update writtentrain set `title_id`=#{titleId},
	`title_type`=#{titleType},
	`title_desc`=#{titleDesc},
	`title_url`=#{titleUrl},
	`title_name`=#{titleName},
	`title_time`=#{titleTime},
	`title_exp`=#{titleExp},
	`title_remark`=#{titleRemark},
	`title_img`=#{titleImg} where id=#{id}
  </update>
    <delete id="deleteTrainById" parameterType="java.lang.Integer">
        delete from writtentrain where id=#{id}
    </delete>
</mapper>